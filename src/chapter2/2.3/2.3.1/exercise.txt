# Exercise 2.3.1

root -> expr
expr -> expr + fact | expr - fact | fact
fact -> fact * digit | fact / digit | digit | (expr) | e
digit -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

Translation scheme: 

root -> expr { root.prefix = expr.prefix; print(root.prefix) }

expr -> expr + fact { expr.prefix = '+' || expr.prefix || fact.prefix }
expr -> expr - fact { expr.prefix = '-' || expr.prefix || fact.prefix }
expr -> fact { expr.prefix = fact.prefix }

fact -> fact * digit { fact.prefix = '*' || fact.prefix || digit.prefix }
fact -> fact / digit { fact.prefix = '/' || fact.prefix || digit.prefix }
fact -> digit { fact.prefix = digit.value }
fact -> (expr) { fact.prefix = expr.prefix }
fact -> e { }

digit -> 0 { digit.value = 0 }
digit -> 1 { digit.value = 1 }
digit -> 2 { digit.value = 2 }
digit -> 3 { digit.value = 3 }
digit -> 4 { digit.value = 4 }
digit -> 5 { digit.value = 5 }
digit -> 6 { digit.value = 6 }
digit -> 7 { digit.value = 7 }
digit -> 8 { digit.value = 8 }
digit -> 9 { digit.value = 9 }

